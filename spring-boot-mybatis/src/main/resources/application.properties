
server.servlet.session.timeout=7200

## 数据源配置
spring.datasource.url=jdbc:mysql://localhost:3306/mydemo?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Hikari will use the above plus the following to setup connection pooling
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=DatebookHikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

#pagehelper配置
pagehelper.auto-dialect=mysql
pagehelper.support-methods-arguments=true
# 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
pagehelper.reasonable=false
pagehelper.params=countSql

# Mybatis 配置
mybatis.typeAliasesPackage=com.sample.app.entity
mybatis.mapperLocations=classpath:mapper/*.xml
# 配置mybatis自动转换为驼峰式命名
mybatis.configuration.map-underscore-to-camel-case=true

# redis 配置
# redis 单机模式
#spring.redis.host=
#spring.redis.port=

# redis 哨兵模式
#spring.redis.sentinel.master=mymaster
#spring.redis.sentinel.nodes=
#spring.redis.password=

# redis 集群模式
#spring.redis.cluster.nodes=
